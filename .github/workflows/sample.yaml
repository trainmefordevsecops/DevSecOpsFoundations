name: Streamlined-DevSecOps-Pipeline

on:
  push:
    branches:
      - pipeline

jobs:
  streamlined-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        run: |
          echo "clone vulnerable repository"
          git clone https://github.com/juice-shop/juice-shop.git

      - name: Build
        run: |
          echo "listing all directories and files"
          cd ${{ github.workspace }}/juice-shop
          npm install

     # - name: SAST
     #   run: |
     #     echo "run SAST security checks"
     #     docker run -t --name sast -v ${{ github.workspace }}/juice-shop:/path checkmarx/kics:latest scan -p /path -o "/path/" || true
     #     if [[ "$(docker logs sast &> sast.log;  cat sast.log | grep 'HIGH' | tail -n 1 | awk '{print $2;}')" != 0 ]]; then echo "failed due to sast security
     #     issues"; exit 1; else echo "All Good to proceed"; exit 0; fi

      - name: SCA
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          echo "run SCA security checks"
          cd ${{ github.workspace }}/juice-shop
          docker run --name sca -e SNYK_TOKEN=$SNYK_TOKEN -v ./:/app snyk/snyk:node || true
          if [[ "$(docker logs sca &> sca.log; cat sca.log | grep -o 'found [1-9]\d* issues' | awk '{print $2;}')" != 0 ]]; then echo "failed due to sca security
          issues"; exit 1; else echo "All Good to proceed"; exit 0; fi


     # - name: Docker Container Security Test 
     #   run: |
     #     echo "Security Testing Container"
     #     docker pull bkimminich/juice-shop
     #     docker run --name containersecurity -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image bkimminich/juice-shop || true
     #     if [[ "$(docker logs containersecurity &> containersecurity.log;  cat containersecurity.log | grep -o 'CRITICAL: [1-9]\d*'  | awk '{print $2;}')" -gt 0 ]]; then echo "failed due to container security
     #     issues"; exit 1; else echo "All Good to proceed"; exit 0; fi

     # - name: DAST
     #   run: |
     #     echo "DAST Security Testing"
     #     docker run -d -p 3000:3000 --name juiceshop bkimminich/juice-shop 
     #     juiceip=$(docker inspect -f "{{.NetworkSettings.Networks.bridge.IPAddress }}" juiceshop)
     #     docker run -t --name dast ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t http://$juiceip:3000 || true
     #     docker logs dast &> dast.log
     #     if [[ "$(docker logs dast &> dast.log; tail -n 1 dast.log | grep -o 'WARN-NEW. [1-9]\d*' | awk '{print $2;}')" -gt 0 ]]; then echo "failed due to dast security 
     #     issues"; exit 1; else echo "All Good to proceed"; exit 0; fi


      #- name: Deploy
      #  run: |
      #    echo "Deployment completed"
      #    java -version
      #    python --version

